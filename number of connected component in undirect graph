#include <bits/stdc++.h>

using namespace std;
void bfs(vector<int>adj[],int s, bool visited[]);

void addedge(vector<int>adj[],int u, int v){
    adj[u].push_back(v);
    adj[v].push_back(u);
}
void printgraph(vector<int>adj[],int v){
    for(int i=0;i<v;i++){
        for(int x : adj[i]){
            cout << x <<" ";
        }
        cout<<endl;
    }
    
}
int bfslow(vector<int>adj[],int v){
    bool visited[v];
    int count = 0;
    for(int i=0;i<v;i++){
        visited[i]=false;
    }
    for(int i=0;i<v;i++){
        if(visited[i]==false){
            //visited[i]=true;
            bfs(adj,i,visited);
            count++;
        }
        
    }
    return count ;
    
    
}
void bfs(vector<int>adj[],int s, bool visited[]){
    // bool visited[v];
    // for(int i=0;i<v;i++){
    //     visited[i]=false;
    // }
    queue<int> q;
    q.push(s);
    visited[s]=true;
    while(q.empty()==false){
        int u = q.front();
        q.pop();
        cout<<u<<" ";
        for(int v : adj[u]){
            if(visited[v]==false){
                visited[v]=true;
                q.push(v);
            }
        }
    }
    
    
    
}

int main()
{
   int v= 9;
   vector<int>adj[v];
   addedge(adj,0,1);
  addedge(adj,1,2);
  addedge(adj,3,4);
  addedge(adj,5,6);
//   addedge(adj,4,5);
//   addedge(adj,4,6);
//   addedge(adj,7,8);
  addedge(adj,5,7);
  addedge(adj,7,8);
  printgraph(adj,v);
  cout<<" lets start bfs and order are : "<<endl;
  int res = bfslow(adj,v);
  cout<<" the number of connected component is : "<<res;
   
   return 0;
}
